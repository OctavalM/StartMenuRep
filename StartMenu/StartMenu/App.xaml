<Application
	x:Class="StartMenu.App"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:StartMenu"
	StartupUri="MainWindow.xaml">
	<Application.Resources>

		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle
							Margin="2"
							SnapsToDevicePixels="true"
							Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
							StrokeDashArray="1 2"
							StrokeThickness="1" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="Button.Static.Background" Color="Transparent" />
		<SolidColorBrush x:Key="Button.Static.Border" Color="Transparent" />
		<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#3FFFFFFF" />
		<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#3FFFFFFF" />
		<SolidColorBrush x:Key="Button.Pressed.Background" Color="#4FFFFFFF" />
		<SolidColorBrush x:Key="Button.Pressed.Border" Color="#4FFFFFFF" />
		<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
		<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
		<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
		<Style x:Key="MenuBarStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Padding" Value="1" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border
							x:Name="border"
							Height="45"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="true">
							<ContentPresenter
								x:Name="contentPresenter"
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Focusable="False"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
								<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
								<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
								<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
								<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="ListBox.Static.Background" Color="#26373D" />
		<SolidColorBrush x:Key="ListBox.Static.Border" Color="#26373D" />
		<SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#26373D" />
		<SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#26373D" />
		<Style x:Key="ListViewStyle" TargetType="{x:Type ListView}">
			<Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" />
			<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
			<Setter Property="ScrollViewer.PanningMode" Value="Both" />
			<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListView}">
						<Border
							x:Name="Bd"
							Padding="1"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="true">
							<ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
								<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsGrouping" Value="true" />
									<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
								</MultiTrigger.Conditions>
								<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="AppButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="HorizontalContentAlignment" Value="Left" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Padding" Value="1" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border
							x:Name="border"
							Height="40"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="true">
							<ContentPresenter
								x:Name="contentPresenter"
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Focusable="False"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
								<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
								<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
								<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
								<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


	</Application.Resources>
</Application>
